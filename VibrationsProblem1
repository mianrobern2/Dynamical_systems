# Ing. Miguel Angel Rodriguez
# simulation harness
import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import odeint

# m1=2, m2=3, k1=2, k2=1, b1=1.9, b2=1.5
def system_2_1(a, t, m1, m2, k1, k2, b1, b2):
    """ sistema de traslaci√≥n en 2 masas """
    if t < 0:
        f = 0
    else:
        f = 1
    return np.array([a[2],
                     a[3],
                     (-(k1 + k2) * a[0] - b1 * a[2] + f + k2 * a[1]) * (1 / m1),
                     (-k2 * a[1] + k2 * a[0] - b2 * a[3]) * (1 / m2)])
# time step
h = 0.01

# simulation time
time = np.arange(0, 40, h)

# initial conditions
y0 = np.array([0, 0, 0, 0])

# initialize yk
yk = y0

# solve system of equations args=(m1, m2, k1, k2, b1, b2)
y = odeint(system_2_1, y0, time, args=(1.2, 1.2, 0.9, 0.4, 0.8, 0.4))

# convert list to numpy array
y = np.array(y)

# ==============================================================
# plot result

fig, ax = plt.subplots()
ax.plot(time, y[:, 0])
ax.plot(time, y[:, 1])
